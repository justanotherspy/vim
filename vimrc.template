" ============================================================================
" Minimalist Vim Configuration for macOS and Ubuntu
" Compatible with Vim 9.1+
" ============================================================================

" --- General Settings ---
set nocompatible              " Use Vim defaults (much better!)
set encoding=utf-8            " Set default encoding to UTF-8
set fileencoding=utf-8        " Set file encoding to UTF-8

" --- Display Settings ---
set number                    " Show line numbers
set relativenumber            " Show relative line numbers (useful for motions)
set ruler                     " Show cursor position in status line
set showcmd                   " Show incomplete commands
set showmode                  " Show current mode
set laststatus=2              " Always show status line
set cursorline                " Highlight current line
set scrolloff=5               " Keep 5 lines above/below cursor when scrolling
set sidescrolloff=5           " Keep 5 columns left/right of cursor when scrolling

" --- Mouse Support ---
set mouse=a                   " Enable mouse in all modes
set mousehide                 " Hide mouse pointer while typing

" --- Search Settings ---
set ignorecase                " Case insensitive search
set smartcase                 " Case sensitive when uppercase present
set incsearch                 " Show search matches as you type
set hlsearch                  " Highlight search results

" --- Indentation & Tabs ---
set autoindent                " Auto-indent new lines
set smartindent               " Smart indent for programming
set expandtab                 " Use spaces instead of tabs
set tabstop=4                 " Number of spaces tab counts for
set shiftwidth=4              " Number of spaces for auto-indent
set softtabstop=4             " Number of spaces for tab in insert mode
set smarttab                  " Smart tab at beginning of line

" --- File Handling ---
set autoread                  " Auto reload files changed outside vim
set hidden                    " Allow hidden buffers with unsaved changes
set confirm                   " Confirm instead of failing commands

" --- Backup & Swap Files ---
" Create backup, swap, and undo directories if they don't exist
if !isdirectory($HOME."/.vim/backup")
    call mkdir($HOME."/.vim/backup", "p", 0700)
endif
if !isdirectory($HOME."/.vim/swap")
    call mkdir($HOME."/.vim/swap", "p", 0700)
endif
if !isdirectory($HOME."/.vim/undo")
    call mkdir($HOME."/.vim/undo", "p", 0700)
endif

set backup                    " Keep backup files
set backupdir=~/.vim/backup// " Directory for backup files
set directory=~/.vim/swap//   " Directory for swap files
set undofile                  " Persistent undo
set undodir=~/.vim/undo//     " Directory for undo files

" --- Performance ---
set lazyredraw                " Don't redraw during macros
set ttyfast                   " Fast terminal connection

" --- Completion ---
set wildmenu                  " Enhanced command line completion
set wildmode=longest:full,full " Command line completion mode
set completeopt=menuone,noselect " Better completion experience

" --- Syntax & Colors ---
syntax enable                 " Enable syntax highlighting
set background=dark           " Dark background
filetype plugin indent on     " Enable filetype detection, plugins, and indent

" Try to use a nice colorscheme if available
try
    colorscheme desert
catch
    " Fall back to default if colorscheme not found
endtry

" --- Splits ---
set splitbelow                " Horizontal splits open below
set splitright                " Vertical splits open to the right

" --- Backspace Behavior ---
set backspace=indent,eol,start " Make backspace work as expected

" --- Line Wrapping ---
set wrap                      " Wrap long lines
set linebreak                 " Wrap at word boundaries
set showbreak=â†ª\              " Show wrapped line indicator

" --- Timing ---
set updatetime=300            " Faster completion (default is 4000ms)
set timeoutlen=500            " Time to wait for mapped sequence

" --- Status Line ---
set statusline=%f             " Filename
set statusline+=\ %m          " Modified flag
set statusline+=\ %r          " Readonly flag
set statusline+=%=            " Right align
set statusline+=\ %y          " File type
set statusline+=\ %l:%c       " Line:Column
set statusline+=\ %p%%        " Percentage through file

" --- Key Mappings ---
" Set leader key to space
let mapleader = " "

" Clear search highlighting
nnoremap <leader>h :nohlsearch<CR>

" Quick save
nnoremap <leader>w :w<CR>

" Quick quit
nnoremap <leader>q :q<CR>

" Navigate between splits easier
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Move lines up/down
nnoremap <A-j> :m .+1<CR>==
nnoremap <A-k> :m .-2<CR>==
vnoremap <A-j> :m '>+1<CR>gv=gv
vnoremap <A-k> :m '<-2<CR>gv=gv

" Better visual mode indent (keeps selection)
vnoremap < <gv
vnoremap > >gv

" --- Auto Commands ---
if has("autocmd")
    " Remove trailing whitespace on save
    autocmd BufWritePre * :%s/\s\+$//e

    " Return to last edit position when opening files
    autocmd BufReadPost *
        \ if line("'\"") > 0 && line("'\"") <= line("$") |
        \   exe "normal! g`\"" |
        \ endif

    " Highlight TODO, FIXME, NOTE, etc.
    autocmd Syntax * call matchadd('Todo', '\W\zs\(TODO\|FIXME\|CHANGED\|XXX\|BUG\|HACK\|NOTE\)')
endif

" --- Platform-Specific Settings ---
if has("unix")
    let s:uname = system("uname -s")
    if s:uname =~ "Darwin"
        " macOS specific settings
        " Use system clipboard
        set clipboard=unnamed
    else
        " Linux specific settings
        " Use system clipboard (requires vim-gtk3 or vim-gnome on Ubuntu)
        set clipboard=unnamedplus
    endif
endif

" --- Load Local Config ---
" Allow for machine-specific overrides in ~/.vimrc.local
if filereadable(expand("~/.vimrc.local"))
    source ~/.vimrc.local
endif
